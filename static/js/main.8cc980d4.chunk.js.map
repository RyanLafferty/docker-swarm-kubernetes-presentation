{"version":3,"sources":["res/img/DockerPresentation/docker-minimal.png","res/img/DockerPresentation/confused.jpg","res/img/DockerPresentation/containerized-apps.png","res/img/DockerPresentation/vm-vs-container.jpg","res/img/DockerPresentation/union-file-system.png","res/img/DockerPresentation/union-file-system-simple.jpg","res/img/DockerPresentation/docker-types-of-mounts.png","res/img/DockerPresentation/docker-build-process.svg","res/img/DockerPresentation/docker-build-optimizations.png","res/img/DockerPresentation/docker-hazards.png","res/img/DockerPresentation/container-networking.png","res/img/DockerPresentation/container-orchestration-tools.jpg","res/img/DockerPresentation/container-orchestration-objectives.jpg","res/img/DockerPresentation/docker-swarm-architecture.png","res/img/DockerPresentation/docker-swarm-workers.png","res/img/DockerPresentation/how-to-use-swarm.png","res/img/DockerPresentation/kubernetes-architecture.jpg","res/img/DockerPresentation/kubernetes-deployment.png","slides/DockerPresentation/Intro.js","slides/DockerPresentation/WhatIsDocker.js","slides/DockerPresentation/ConfusedContainer.js","slides/DockerPresentation/WhatIsAContainer.js","slides/DockerPresentation/ContainerObjectives.js","slides/DockerPresentation/DockerFileSystem.js","slides/DockerPresentation/UnionFileSystem.js","slides/DockerPresentation/OutsideUnionFileSystem.js","slides/DockerPresentation/DockerBuildProcess.js","slides/DockerPresentation/DockerBuildOptimizations.js","slides/DockerPresentation/DockerBuildHazards.js","slides/DockerPresentation/ContainerNetworking.js","slides/DockerPresentation/ContainerOrchestration.js","slides/DockerPresentation/ContainerOrchestrationObjectives.js","slides/DockerPresentation/SwarmIntro.js","slides/DockerPresentation/WhatIsSwarm.js","slides/DockerPresentation/WhatIsSwarmWorker.js","slides/DockerPresentation/HowToUseTheSwarm.js","slides/DockerPresentation/SwarmExample.js","slides/DockerPresentation/KubernetesIntro.js","slides/DockerPresentation/WhatIsKubernetes.js","slides/DockerPresentation/HowToUseKubernetes.js","slides/DockerPresentation/KubernetesExample.js","decks/DockerPresentation/Main.js","screens/DockerPresentation.js","registerServiceWorker.js","index.js","res/img/DockerPresentation/octocat.png"],"names":["module","exports","__webpack_require__","p","Intro","react_default","a","createElement","slide","transition","bgColor","heading","size","fit","caps","lineHeight","textColor","WhatIsDocker","bgDarken","bgImage","docker","textFont","components_text","ConfusedContainer","components_image","src","confused","margin","WhatIsAContainer","container","style","height","width","ContainerObjectives","modular","list","appear","list_item","DockerFileSystem","visibility","UnionFileSystem","OutsideUnionFileSystem","DockerBuildProcess","DockerBuildOptimizations","DockerBuildHazards","ContainerNetworking","ContainerOrchestration","ContainerOrchestrationObjectives","SwarmIntro","WhatIsSwarm","WhatIsSwarmWorker","HowToUseTheSwarm","SwarmExample","components_link","href","KubernetesIntro","WhatIsKubernetes","HowToUseKubernetes","KubernetesExample","theme","createTheme","primary","Main","deck","transitionDuration","Component","DockerPresentation","DockerPresentation_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","screens_DockerPresentation","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8cc980d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/docker-minimal.aa0359ed.png\";","module.exports = __webpack_public_path__ + \"static/media/confused.afb0fe03.jpg\";","module.exports = __webpack_public_path__ + \"static/media/containerized-apps.a5ed9c79.png\";","module.exports = __webpack_public_path__ + \"static/media/vm-vs-container.ba6d92b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/union-file-system.6ca4477f.png\";","module.exports = __webpack_public_path__ + \"static/media/union-file-system-simple.6d305a9d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/docker-types-of-mounts.5e147844.png\";","module.exports = __webpack_public_path__ + \"static/media/docker-build-process.b595b80b.svg\";","module.exports = __webpack_public_path__ + \"static/media/docker-build-optimizations.e8fcc72e.png\";","module.exports = __webpack_public_path__ + \"static/media/docker-hazards.9cce3c53.png\";","module.exports = __webpack_public_path__ + \"static/media/container-networking.ea026d9c.png\";","module.exports = __webpack_public_path__ + \"static/media/container-orchestration-tools.670bedde.jpg\";","module.exports = __webpack_public_path__ + \"static/media/container-orchestration-objectives.cb246411.jpg\";","module.exports = __webpack_public_path__ + \"static/media/docker-swarm-architecture.7922c7e5.png\";","module.exports = __webpack_public_path__ + \"static/media/docker-swarm-workers.dc4e9474.png\";","module.exports = __webpack_public_path__ + \"static/media/how-to-use-swarm.7de2c10a.png\";","module.exports = __webpack_public_path__ + \"static/media/kubernetes-architecture.672e8947.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kubernetes-deployment.c12f6f68.png\";","import React from 'react';\nimport {\n  Heading, Slide\n} from 'spectacle';\n\nconst Intro = (\n  <Slide transition={['slide']} bgColor=\"primary\">\n    <Heading size={1} fit caps lineHeight={1} textColor=\"black\">\n      Docker\n    </Heading>\n  </Slide>\n);\n\nexport default Intro;","import React from 'react';\nimport {\n  Heading, Slide, Text\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/docker-minimal.png';\n\n\nconst WhatIsDocker = (\n  <Slide transition={['fade']} bgDarken={0.85} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      What is Docker?\n    </Heading>\n    <Text textColor=\"tertiary\">\n      Docker is the current leading container platform\n    </Text>\n  </Slide>\n);\n\nexport default WhatIsDocker;","import React from 'react';\nimport {\n  Heading, Image, Slide\n} from 'spectacle';\n\nimport confused from './../../res/img/DockerPresentation/confused.jpg';\n\n\nconst ConfusedContainer = (\n  <Slide transition={['fade']}>\n    <Image src={confused} margin=\"0px auto 40px\" />\n    <Heading size={2} caps fit textColor=\"tertiary\" textFont=\"primary\">\n      Container?\n    </Heading>\n  </Slide>\n);\n\nexport default ConfusedContainer;","import React from 'react';\nimport {\n  Heading, Image, Slide\n} from 'spectacle';\n\nimport container from './../../res/img/DockerPresentation/containerized-apps.png';\n\n\nconst WhatIsAContainer = (\n  <Slide transition={['fade']}>\n    <Image src={container} margin=\"0px auto 40px\" style={{height: '500px', width: '500px'}} />\n    <Heading size={2} caps fit textColor=\"tertiary\" textFont=\"primary\">\n      A container is a standardized unit of software\n    </Heading>\n  </Slide>\n);\n\nexport default WhatIsAContainer;","import React from 'react';\nimport {\n  Appear, Heading, ListItem, List, Slide\n} from 'spectacle';\n\nimport modular from './../../res/img/DockerPresentation/vm-vs-container.jpg';\n        \n\nconst ContainerObjectives = (\n  <Slide  transition={[\"slide\"]} bgDarken={0.85} bgImage={modular}>\n    <Heading caps fit textColor=\"tertiary\">\n      Container Objectives\n    </Heading>\n    <List>\n      <Appear>\n        <ListItem textColor=\"primary\">\n          <b>Standard:</b> They should be portable\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem textColor=\"primary\">\n          <b>Light Weight:</b> They should share the operating system kernel\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem textColor=\"primary\">\n          <b>Secure:</b> Applications should be isolated within the container resulting in a safer development environment\n          for the host machine\n        </ListItem>\n      </Appear>\n    </List>\n  </Slide>\n);\n        \nexport default ContainerObjectives;","import React from 'react';\nimport {\n  Heading, Slide, Text\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/union-file-system.png';\n\n\nconst DockerFileSystem = (\n  <Slide transition={['fade']} bgDarken={0.85} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      Docker File System\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      Docker makes use of a <b>Union File System</b>\n    </Text>\n  </Slide>\n);\n\nexport default DockerFileSystem;","import React from 'react';\nimport {\n  Heading, Slide, Text, Appear\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/union-file-system-simple.jpg';\n\n\nconst UnionFileSystem = (\n  <Slide transition={['fade']} bgDarken={0.85} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      Union File System\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Appear>\n      <Text textColor=\"tertiary\">\n        This kind of file system allows each container to be comprised of layers\n      </Text>\n    </Appear>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Appear>\n      <Text textColor=\"tertiary\">\n        On the bottom we have the read only image layers, these would typically be your base images (Node, Ubuntu, etc)\n      </Text>\n    </Appear>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Appear>\n      <Text textColor=\"tertiary\">\n        On the top we have read-write layers, one example would be source code either copied in or mounted in a volume\n      </Text>\n    </Appear>\n  </Slide>\n);\n\nexport default UnionFileSystem;","import React from 'react';\nimport {\n  Heading, Slide, Text\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/docker-types-of-mounts.png';\n\n\nconst OutsideUnionFileSystem = (\n  <Slide transition={['fade']} bgDarken={0.90} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      Outside The Union File System\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n    There can be volumes which enable us to persist data outside of the docker environment,\n     these directories and files are mounted as the top layer of the <b>Union File System</b>\n    </Text>\n  </Slide>\n);\n\nexport default OutsideUnionFileSystem;","import React from 'react';\nimport {\n  Heading, Slide, Text\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/docker-build-process.svg';\n\n\nconst DockerBuildProcess = (\n  <Slide transition={['fade']} bgDarken={0.90} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      Docker Build Process\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      Dockerfiles are scripts that enable us to execute a set of instructions and arguments in order. They start from a defined\n      base image which is built off of using the steps listed in the Dockerfile. Each successful step is cached in case an image is rebuilt.\n      Cached steps are only used if the previous steps and current step have no changes present.\n    </Text>\n  </Slide>\n);\n\nexport default DockerBuildProcess;","import React from 'react';\nimport {\n  Heading, Slide, Text\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/docker-build-optimizations.png';\n\n\nconst DockerBuildOptimizations = (\n  <Slide transition={['fade']} bgDarken={0.90} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      Docker Build Optimizations\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      <b>Multi-Stage Builds:</b> Use multi-stage builds in order to reduce image size, number of layers and increase\n        layer reusability\n    </Text>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      <b>Order:</b> Maximize the use of Docker's cache by ordering your instructions such that those \n      which have the most changes are executed last\n    </Text>\n  </Slide>\n);\n\nexport default DockerBuildOptimizations;","import React from 'react';\nimport {\n  Heading, Slide, Text, Appear\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/docker-hazards.png';\n\n\nconst DockerBuildHazards = (\n  <Slide transition={['fade']} bgDarken={0.90} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      Docker Build Hazards\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Appear>\n      <Text textColor=\"tertiary\">\n        <b>Volumes:</b> Mounting volumes gives your application read / write access outside of the container\n      </Text>\n    </Appear>\n    <Appear>\n      <Text textColor=\"tertiary\">\n        <b>Latest:</b> Using the latest Docker image as a base can result in build suddenly breaking when a\n        new major version of the image is released\n      </Text>\n    </Appear>\n    <Appear>\n      <Text textColor=\"tertiary\">\n        <b>External Services:</b> Running external services such as database migrations may result in build failures\n        if the database container is not available during the build process\n      </Text>\n    </Appear>\n  </Slide>\n);\n\nexport default DockerBuildHazards;","import React from 'react';\nimport {\n  Heading, Slide, Text\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/container-networking.png';\n\n\nconst ContainerNetworking = (\n  <Slide transition={['fade']} bgDarken={0.75} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      Container Networking\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      Containers will make use of the defined network interface. They can be run together on their own\n      virtual network or on a bridged network. Within their network they can be resolved using their container name.\n      In order to expose them to the outside world we must publish their ports using the following\n      format <b>CONTAINER_PORT:DOCKER_HOST_PORT</b>.\n    </Text>\n  </Slide>\n);\n\nexport default ContainerNetworking;","import React from 'react';\nimport {\n  Heading, Slide, Text\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/container-orchestration-tools.jpg';\n\n\nconst ContainerOrchestration = (\n  <Slide transition={['fade']} bgDarken={0.85} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      Container Orchestration\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      <b>Container Orchestration</b> is a solution which enables us to manage a large number of containers\n    </Text>\n  </Slide>\n);\n\nexport default ContainerOrchestration;","import React from 'react';\nimport {\n  Appear, Heading, ListItem, List, Slide\n} from 'spectacle';\n\nimport modular from './../../res/img/DockerPresentation/container-orchestration-objectives.jpg';\n\n\nconst ContainerOrchestrationObjectives = (\n  <Slide  transition={[\"slide\"]} bgDarken={0.75} bgImage={modular}>\n    <Heading caps fit textColor=\"tertiary\">\n      Container Orchestration Objectives\n    </Heading>\n    <List>\n      <Appear>\n        <ListItem textColor=\"primary\">\n          <b>Deployment</b> \n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem textColor=\"primary\">\n          <b>Networking</b>\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem textColor=\"primary\">\n          <b>Scheduling</b>\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem textColor=\"primary\">\n          <b>Scaling</b>\n        </ListItem>\n      </Appear>\n    </List>\n  </Slide>\n);\n        \nexport default ContainerOrchestrationObjectives;","import React from 'react';\nimport {\n  Heading, Slide\n} from 'spectacle';\n\nconst SwarmIntro = (\n  <Slide transition={['slide']} bgColor=\"primary\">\n    <Heading size={1} fit caps lineHeight={1} textColor=\"black\">\n      Docker Swarm\n    </Heading>\n  </Slide>\n);\n\nexport default SwarmIntro;","import React from 'react';\nimport {\n  Heading, Slide, Text\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/docker-swarm-architecture.png';\n\n\nconst WhatIsSwarm = (\n  <Slide transition={['fade']} bgDarken={0.85} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      What is Swarm Mode?\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      In <b>Swarm Mode</b> a group of machine(s) (<b>Swarm Worker(s)</b>) are joined into a cluster where a\n      <b> Swarm Manager</b> will decide which worker will host a deployed container using an array of strategies,\n      one of the most common strategies is emptiest node\n    </Text>\n  </Slide>\n);\n\nexport default WhatIsSwarm;","import React from 'react';\nimport {\n  Heading, Slide, Text\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/docker-swarm-workers.png';\n\n\nconst WhatIsSwarmWorker = (\n  <Slide transition={['fade']} bgDarken={0.85} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      What is a Swarm Worker?\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      A <b>Swarm Worker's</b> purpose is to provide capacity to the <b>Swarm Manager(s)</b> which handle\n      the container orchestration\n    </Text>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      They can be either a physical or a virtual machine\n    </Text>\n  </Slide>\n);\n\nexport default WhatIsSwarmWorker;","import React from 'react';\nimport {\n  Heading, Slide, Text\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/how-to-use-swarm.png';\n\n\nconst HowToUseTheSwarm = (\n  <Slide transition={['fade']} bgDarken={0.85} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      How do we use a Swarm?\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      To make use of a <b>Swarm</b> we interact with the <b>Swarm Manager(s)</b> through a series of commands and arguments\n      which enable us to do everything from deploying a defined service to configuring our load balancer(s)\n    </Text>\n  </Slide>\n);\n\nexport default HowToUseTheSwarm;","import React from 'react';\nimport {\n  Heading, Slide, Text, Link\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/octocat.png';\n\n\nconst SwarmExample = (\n  <Slide transition={['fade']} bgDarken={0.85} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      Swarm Example\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      See below for an example on a local docker swarm cluster\n    </Text>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Link textColor=\"primary\" \n      href=\"https://github.com/RyanLafferty/templates/tree/master/web/docker-swarm\"\n    >\n      <b>Link</b>\n    </Link>\n  </Slide>\n);\n\nexport default SwarmExample;","import React from 'react';\nimport {\n  Heading, Slide\n} from 'spectacle';\n\nconst KubernetesIntro = (\n  <Slide transition={['slide']} bgColor=\"primary\">\n    <Heading size={1} fit caps lineHeight={1} textColor=\"black\">\n      Kubernetes\n    </Heading>\n  </Slide>\n);\n\nexport default KubernetesIntro;","import React from 'react';\nimport {\n  Heading, Slide, Text\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/kubernetes-architecture.jpg';\n\n\nconst WhatIsKubernetes = (\n  <Slide transition={['fade']} bgDarken={0.85} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      What is Kubernetes?\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      Kubernetes is another solution to the container orchestration problem space. It is a platform\n      for containers, microservices and cloud solutions.\n    </Text>\n  </Slide>\n);\n\nexport default WhatIsKubernetes;","import React from 'react';\nimport {\n  Heading, Slide, Text\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/kubernetes-deployment.png';\n\n\nconst HowToUseKubernetes = (\n  <Slide transition={['fade']} bgDarken={0.890} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      How do we use a kubernetes cluster?\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      TODO\n    </Text>\n  </Slide>\n);\n\nexport default HowToUseKubernetes;","import React from 'react';\nimport {\n  Heading, Slide, Text, Link\n} from 'spectacle';\n\nimport docker from './../../res/img/DockerPresentation/octocat.png';\n\n\nconst KubernetesExample = (\n  <Slide transition={['fade']} bgDarken={0.85} bgImage={docker}>\n    <Heading size={2} caps fit textColor=\"primary\" textFont=\"primary\">\n      Kubernetes Example\n    </Heading>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Text textColor=\"tertiary\">\n      See below for an example on a local kubernetes cluster using minikube\n    </Text>\n    <Text style={{ visibility: 'hidden' }}>\n      ...\n    </Text>\n    <Link textColor=\"primary\" \n      href=\"https://github.com/RyanLafferty/templates/tree/master/web/kubernetes\"\n    >\n      <b>Link</b>\n    </Link>\n  </Slide>\n);\n\nexport default KubernetesExample;","import React, { Component } from 'react';\nimport createTheme from \"spectacle/lib/themes/default\";\nimport { Deck } from 'spectacle';\n\nimport Intro from './../../slides/DockerPresentation/Intro';\nimport WhatIsDocker from './../../slides/DockerPresentation/WhatIsDocker';\nimport ConfusedContainer from '../../slides/DockerPresentation/ConfusedContainer';\nimport WhatIsAContainer from './../../slides/DockerPresentation/WhatIsAContainer';\nimport ContainerObjectives from './../../slides/DockerPresentation/ContainerObjectives';\nimport DockerFileSystem from './../../slides/DockerPresentation/DockerFileSystem';\nimport UnionFileSystem from './../../slides/DockerPresentation/UnionFileSystem';\nimport OutsideUnionFileSystem from './../../slides/DockerPresentation/OutsideUnionFileSystem';\nimport DockerBuildProcess from './../../slides/DockerPresentation/DockerBuildProcess';\nimport DockerBuildOptimizations from './../../slides/DockerPresentation/DockerBuildOptimizations';\nimport DockerBuildHazards from './../../slides/DockerPresentation/DockerBuildHazards';\nimport ContainerNetworking from './../../slides/DockerPresentation/ContainerNetworking';\nimport ContainerOrchestration from './../../slides/DockerPresentation/ContainerOrchestration';\nimport ContainerOrchestrationObjectives from './../../slides/DockerPresentation/ContainerOrchestrationObjectives';\nimport SwarmIntro from './../../slides/DockerPresentation/SwarmIntro';\nimport WhatIsSwarm from './../../slides/DockerPresentation/WhatIsSwarm';\nimport WhatIsSwarmWorker from './../../slides/DockerPresentation/WhatIsSwarmWorker';\nimport HowToUseTheSwarm from './../../slides/DockerPresentation/HowToUseTheSwarm';\nimport SwarmExample from './../../slides/DockerPresentation/SwarmExample';\nimport KubernetesIntro from './../../slides/DockerPresentation/KubernetesIntro';\nimport WhatIsKubernetes from './../../slides/DockerPresentation/WhatIsKubernetes';\nimport HowToUseKubernetes from './../../slides/DockerPresentation/HowToUseKubernetes';\nimport KubernetesExample from './../../slides/DockerPresentation/KubernetesExample';\n\n\nconst theme = createTheme({\n  primary: '#27BDCE',\n});\n\n\nclass Main extends Component {\n  render() {\n    return (\n        <Deck theme={theme} transition={['zoom', 'slide', 'fade']} transitionDuration={500}>\n          {Intro}\n          {WhatIsDocker}\n          {ConfusedContainer}\n          {WhatIsAContainer}\n          {ContainerObjectives}\n          {DockerFileSystem}\n          {UnionFileSystem}\n          {OutsideUnionFileSystem}\n          {DockerBuildProcess}\n          {DockerBuildOptimizations}\n          {DockerBuildHazards}\n          {ContainerNetworking}\n          {ContainerOrchestration}\n          {ContainerOrchestrationObjectives}\n          {SwarmIntro}\n          {WhatIsSwarm}\n          {WhatIsSwarmWorker}\n          {HowToUseTheSwarm}\n          {SwarmExample}\n          {KubernetesIntro}\n          {WhatIsKubernetes}\n          {HowToUseKubernetes}\n          {KubernetesExample}\n        </Deck>\n    );\n  }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport 'normalize.css';\nimport Main from './../decks/DockerPresentation/Main'\n\n\nclass DockerPresentation extends Component {\n  render() {\n    return (\n      <Main />\n    );\n  }\n}\n\nexport default DockerPresentation;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DockerPresentation from './screens/DockerPresentation';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<DockerPresentation />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/octocat.ef468e27.png\";"],"sourceRoot":""}